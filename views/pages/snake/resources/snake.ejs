<script>
function Snake() {
    this.x = 0;
    this.y = 0;
    this.speedTotal = scale * 1;
    this.xSpeed = this.speedTotal;
    this.ySpeed = 0;
    this.total = 1;
    this.tail = [];
    this.configKillingBorders = document.getElementById('borders').checked;
    this.configLineDropping = document.getElementById('drop').checked;
    this.count = 0;

    this.draw = function () {
        for (let i = 0; i < this.tail.length; i++) {
            ctx.fillStyle = '#3e3e3e';
            ctx.fillRect(this.tail[i].x, this.tail[i].y, scale, scale);

            ctx.fillStyle = '#FFFFFF';
            ctx.fillRect(this.tail[i].x + 1, this.tail[i].y + 1, scale - 2, scale - 2);
        }

        ctx.fillStyle = '#3e3e3e';
        ctx.fillRect(this.x, this.y, scale, scale)
        ctx.fillStyle = '#FFFFFF';
        ctx.fillRect(this.x + 1, this.y + 1, scale - 2, scale - 2);
    }

    this.update = function () {
        for (let i = 0; i < this.tail.length - 1; i++) {
            this.tail[i] = this.tail[i + 1];
        }

        this.tail[this.total - 1] = { x: this.x, y: this.y };

        //movement
        this.x += this.xSpeed;
        this.y += this.ySpeed;

        if (this.configLineDropping) {
            if (this.count === 30) {
                this.y += 1 * scale;
                this.count = 0;
            }
        }

        this.count += 1;

        for (let i = 0; i < this.tail.length; i++) {
            if (this.x === this.tail[i].x && this.y === this.tail[i].y) {
                this.restart();
            }
        }

        if (this.configKillingBorders) {
            if (
                this.x < 0
                || this.x > canvas.width
                || this.y < 0
                || this.y > canvas.height
            ) {
                this.restart();
            }
        } else {
            if (this.x < 0) {
                this.x = canvas.width - scale;
            }
            if (this.x > canvas.width - scale) {
                this.x = 0;
            }
            if (this.y < 0) {
                this.y = canvas.height  - scale;
            }
            if (this.y > canvas.height - scale) {
                this.y = 0;
            }
        }
    }

    this.restart = function () {
        document.getElementById('body').innerHTML = '<div style="height: 50px"></div><center><h1 style="color: #eeeeee">GAME OVER</h1></center>';

        window.setInterval(() => {
            location.reload();
        }, 2000);
    }

    this.changeDirection  =function (direction) {
        direct = [0, 0];
        switch (direction) {
            case 'Up':
                direct = [0, -1];
                break;
            case 'Down':
                direct = [0, 1];
                break;
            case 'Left':
                direct = [-1, 0];
                break;
            case 'Right':
                direct = [1, 0];
                break;
        }

        this.xSpeed = direct[0] * this.speedTotal;
        this.ySpeed = direct[1] * this.speedTotal;
    }

    this.eat = function (fruit) {
        if (this.x === fruit.x && this.y === fruit.y) {
            this.total++;
            return true;
        }
    }
}
</script>